{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/classes/AFD.ts","../../src/classes/Estado.ts","../../src/auxiliares/InstanciasAFDs.ts","../../src/auxiliares/RandomUtils.ts","../../src/componentes/Titulo.svelte","../../src/componentes/Icon.svelte","../../src/stores/AFDStore.ts","../../src/componentes/Playground/Estado.svelte","../../src/componentes/Playground/Automato.svelte","../../node_modules/svelte/store/index.mjs","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import type Estado from './Estado';\r\n\r\nexport default class AFD\r\n{\r\n    private _alfabeto: string[];\r\n    private _estados: Estado[];\r\n    private _finais: Estado[];\r\n    private _inicial: Estado;\r\n    public nome: string;\r\n\r\n    constructor( alfabeto: string[], estados: Estado[], estadosFinais: Estado[], estadoInicial?: Estado, nomeAutom: string = 'AFD' )\r\n    {\r\n        const alfa = alfabeto;\r\n        const estds = estados;\r\n        const finais = estadosFinais;\r\n        const start = estadoInicial;\r\n\r\n        if ( !finais.every( estado => finais.includes( estado ) ) )\r\n            throw new Error( 'Todos os estados finais precisam estar contidos na lista de estados!' );\r\n        if ( estadoInicial )\r\n            this.configuraInicial( estadoInicial );\r\n\r\n        this._alfabeto = alfa;\r\n        this._estados = estds;\r\n        this._finais = finais;\r\n        this._inicial = start;\r\n        this.nome = nomeAutom;\r\n    }\r\n\r\n    get alfabeto()\r\n    {\r\n        return this._alfabeto;\r\n    }\r\n\r\n    set alfabeto( novoAlfabeto: string[] )\r\n    {\r\n        this._alfabeto = novoAlfabeto;\r\n\r\n        for ( const estado of this._estados )\r\n            estado.remapeia( novoAlfabeto );\r\n    }\r\n\r\n    get estados()\r\n    {\r\n        return this._estados;\r\n    }\r\n\r\n    get finais()\r\n    {\r\n        return this._finais;\r\n    }\r\n\r\n    get inicial()\r\n    {\r\n        return this._inicial;\r\n    }\r\n\r\n    configuraInicial( estado: Estado )\r\n    {\r\n        if ( !this._estados.includes( estado ) )\r\n            throw new Error( 'O estado inicial precisa estar contido na lista de estados!' );\r\n        \r\n        this._inicial = estado;\r\n    }\r\n\r\n    adicionaEstado( estado: Estado )\r\n    {\r\n        if ( !this.estados.includes( estado ) )\r\n            this.estados.push( estado );\r\n    }\r\n\r\n    removeEstado( removido: Estado )\r\n    {\r\n        const index: number = this.estados.indexOf( removido );\r\n        if ( index >= 0 )\r\n        {\r\n            this.estados.splice( index, 1 );\r\n            // Caso esteja, remova dos estados finais\r\n            this.removeFinal( removido );\r\n\r\n            if ( removido === this._inicial )\r\n                this._inicial = null;\r\n\r\n            // Remove todas as referências\r\n            for ( const estado of this.estados )\r\n                estado.removeEstado( removido );\r\n        }\r\n    }\r\n\r\n    adicionaFinal( estado: Estado ): void\r\n    {\r\n        if ( !this.finais.includes( estado ) )\r\n            this.finais.push( estado );\r\n    }\r\n\r\n    removeFinal( estado: Estado ): void\r\n    {\r\n        const index: number = this.finais.indexOf( estado );\r\n        if ( index >= 0 )\r\n            this.finais.splice( index, 1 );\r\n    }\r\n}\r\n","export default class Estado\r\n{\r\n    private readonly _id: string;\r\n    private readonly _mapa: Map<string, Estado>;\r\n\r\n    constructor( id: string )\r\n    {\r\n        this._id = id;\r\n        this._mapa = new Map();\r\n    }\r\n\r\n    /**\r\n     * ID não deve ser modificado\r\n     */\r\n    get id()\r\n    {\r\n        return this._id;\r\n    }\r\n\r\n    /**\r\n     * Devolve um array de símbolos de entrada que mapeiam para um estado diferente\r\n     */\r\n    get entradas(): string[]\r\n    {\r\n        return [...this._mapa.keys()]\r\n    }\r\n\r\n    /**\r\n     * Verifica se existe mapeamento para o símbolo\r\n     * \r\n     * @param simbolo \r\n     */\r\n    contem( simbolo: string ): boolean\r\n    {\r\n        return this._mapa.has( simbolo );\r\n    }\r\n\r\n    /**\r\n     * Troca uma entrada (símbolo) que já estava mapeada para um estado de saída\r\n     * \r\n     * @param simboloAnterior Símbolo que será substituído\r\n     * @param novoSimbolo Símbolo novo, entrará no lugar do anterior\r\n     * @returns \r\n     */\r\n    trocaEntrada( simboloAnterior: string, novoSimbolo: string ): boolean\r\n    {\r\n        const estado = this.estado( simboloAnterior );\r\n\r\n        // Se existe um mapeamento anterior e não vamos sobrescrever nenhum outro mapeamento\r\n        if ( estado && !this._mapa.has( novoSimbolo ) )\r\n        {\r\n            // Remove mapeamento anterior\r\n            this._mapa.delete( simboloAnterior );\r\n\r\n            // Adiciona novo mapeamento\r\n            this._mapa.set( novoSimbolo, estado )\r\n\r\n            // Tudo certo\r\n            return true;\r\n        }\r\n\r\n        // Não rolou a troca de entrada\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Atualiza um mapeamento (Símbolo → Estado) ou insere um novo caso não exista\r\n     * \r\n     * @param simbolo \r\n     * @param estado \r\n     */\r\n    atualiza( simbolo: string, estado: Estado ): void\r\n    {\r\n        if ( estado !== this )\r\n            this._mapa.set( simbolo, estado );\r\n        else\r\n            this._mapa.delete( simbolo );\r\n    }\r\n\r\n    /**\r\n     * Encontra o Estado mapeado de acordo com o Símbolo passado\r\n     * \r\n     * @param simbolo Símbolo de entrada\r\n     * @returns Estado mapeado. Caso não exista, retorna null\r\n     */\r\n    estado( simbolo: string ): Estado\r\n    {\r\n        return this._mapa.get( simbolo ) ?? null;\r\n    }\r\n\r\n    removeEstado( estado: Estado )\r\n    {\r\n        for ( const entrada of this._mapa.keys() )\r\n            if ( this._mapa.get( entrada ) === estado )\r\n                this._mapa.delete( entrada );\r\n    }\r\n\r\n    remapeia( alfabeto: string[] )\r\n    {\r\n        for ( const entrada of this._mapa.keys() )\r\n            if ( !alfabeto.includes( entrada ) )\r\n                this._mapa.delete( entrada );\r\n    }\r\n\r\n    /**\r\n     * Parecido com o método `estado`, porém quando não há mapeamento retorna uma referência própria\r\n     * \r\n     * @param simbolo Símbolo de entrada\r\n     * @returns Estado mapeado. Caso não exista, retorna uma referência própria\r\n     */\r\n    transicao( simbolo: string ): Estado\r\n    {\r\n        // Caso não tenha mapeamento, continue no estado atual\r\n        return this.estado( simbolo ) ?? this;\r\n    }\r\n}\r\n","import AFD from \"../classes/AFD\";\r\nimport Estado from \"../classes/Estado\";\r\n\r\nconst intervalo = (base: Estado, alvo: Estado, alfa: string[], min: number, max: number) =>\r\n{\r\n    for ( let i=min; i<=max; i++ )\r\n        base.atualiza( alfa[i], alvo );\r\n}\r\n\r\nconst numsParaEstado = (base: Estado, alvo: Estado, alfa: string[], inv: Estado) =>\r\n{\r\n    // Numeros são aceitos\r\n    for ( let i=0; i<=9; i++ )\r\n        base.atualiza( alfa[i], alvo );\r\n    // Qualquer outra coisa é inválida\r\n    intervalo( base, inv, alfa, 10, alfa.length-1);\r\n}\r\n\r\nconst configuraCep = (): AFD =>\r\n{\r\n    const alfa = '0123456789-'.split('');\r\n    const afdCep = new AFD( alfa, [], [] );\r\n\r\n    for ( const nome of ['Número 1', 'Número 2', 'Número 3', 'Número 4', 'Número 5', 'Traço', 'Número 6', 'Número 7', 'Número 8', 'Válido', 'Inválido'] )\r\n        afdCep.adicionaEstado( new Estado( nome ) );\r\n    \r\n    const ss = afdCep.estados;\r\n    const inv = ss[10]\r\n\r\n    afdCep.configuraInicial( ss[0] );\r\n    \r\n    for (let i=0; i<5; i++)\r\n        numsParaEstado( ss[i], ss[i+1], alfa, inv );\r\n    ss[5].atualiza( '-', ss[6] );\r\n    intervalo( ss[5], inv, alfa, 0, 9 );\r\n    intervalo( ss[5], inv, alfa, 11, alfa.length-1 );\r\n    for (let i=6; i<9; i++)\r\n        numsParaEstado( ss[i], ss[i+1], alfa, inv );\r\n    intervalo( ss[9], inv, alfa, 0, alfa.length-1 );\r\n\r\n    afdCep.adicionaFinal( ss[9] );\r\n    \r\n    return afdCep;\r\n}\r\n\r\nfunction configuraEmail(): AFD\r\n{\r\n    const alfa = 'abcdefghijklmnopqrstuvwxyz@.'.split('')\r\n    const afdData = new AFD( alfa, [], [] );\r\n    //                     0     1      2      3         4\r\n    for ( const nome of ['1L', 'NL', '1LDA', 'NLDA', 'Inválido'] )\r\n        afdData.adicionaEstado( new Estado( nome ) );\r\n    \r\n    const ss = afdData.estados;\r\n    const inv = ss[4];\r\n\r\n    // Começa da primeira letra\r\n    afdData.configuraInicial( ss[0] );\r\n\r\n    // Primeira Letra Antes do Arroba\r\n    intervalo( ss[0], ss[1], alfa, 0, 25 ); // Pode começar com qualquer letra\r\n    intervalo( ss[0], inv, alfa, 26, 27 );  // Não pode começar com @ ou .\r\n\r\n    // N-ésima Letra Antes do Arroba    // Qualquer letra volta para si mesmo\r\n    ss[1].atualiza( '.', ss[0] );       // Ponto antes do @, manda de volta pra primeira letra\r\n    ss[1].atualiza( '@', ss[2] );       // Pode ser um @, manda pro estado de primeira letra após @\r\n\r\n    // Primeira Letra Depois do Arroba      \r\n    intervalo( ss[2], ss[3], alfa, 0, 25 ); // Pode começar com qualquer letra\r\n    intervalo( ss[2], inv, alfa, 26, 27 );  // Não pode começar com @ ou .\r\n\r\n    // N-ésima Letra Depois do Arroba   // Qualquer letra volta para si mesmo\r\n    ss[3].atualiza( '.', ss[2] );       // Pode ser um ., manda pro estado de primeira letra após @\r\n    ss[3].atualiza( '@', inv );         // Não pode @ depois do @\r\n    \r\n    // Uma ou mais letras após o ponto são válidas\r\n    afdData.adicionaFinal( ss[3] );\r\n\r\n    return afdData;\r\n}\r\n\r\nexport const cep = configuraCep();\r\nexport const email = configuraEmail();\r\nexport const vazio = new AFD( [], [], [] );\r\n","export const numeroAleatorio = ( min: number, max: number ): number => min + Math.random() * ( max - min );\r\nexport const inteiroAleatorio = ( min: number, max: number ): number => Math.trunc( numeroAleatorio( min, max ) );\r\nexport const elementoAleatorio = ( elemento: string | Array<any> ): ( string | any ) => elemento[ inteiroAleatorio( 0, elemento.length ) ];\r\n","<h1>\r\n    <!--Palavras 'piscando' como se fosse um autômato-->\r\n    {#each palavras as palavra, i}\r\n        <span\r\n            class=\"suave {i === palavras.length-1 ? 'italico' : 'titulo'} { palavraSelecionada === i ? 'selecionado' : '' }\"\r\n        >\r\n            {palavra}\r\n        </span>\r\n    {/each}\r\n</h1>\r\n\r\n<script context=\"module\" lang=\"ts\">\r\n\r\n    // Outros\r\n    import { inteiroAleatorio } from '../auxiliares/RandomUtils'\r\n\r\n</script>\r\n<script lang=\"ts\">\r\n\r\n    // Frase que piscará\r\n    const palavras: string[] = 'Autômatos Finitos Determinísticos: Playground'.split(' ');\r\n\r\n    // Índice da palavra\r\n    let palavraSelecionada: number = inteiroAleatorio( 0, palavras.length );\r\n\r\n    setInterval(() =>\r\n    {\r\n        // Não acende a mesma palavra\r\n        let anterior = palavraSelecionada;\r\n        do\r\n        {\r\n            palavraSelecionada = inteiroAleatorio( 0, palavras.length );\r\n        }\r\n        while( palavraSelecionada === anterior )\r\n        \r\n    }, 1000 );\r\n\r\n</script>\r\n\r\n\r\n<style>\r\n    .suave\r\n    {\r\n        transition: color 0.5s;\r\n    }\r\n\r\n    .titulo\r\n    {\r\n        color: cornflowerblue;\r\n    }\r\n    \r\n    .titulo::after\r\n    {\r\n        content: ' ';\r\n    }\r\n\r\n    .selecionado\r\n    {\r\n        color: red;\r\n    }\r\n\r\n    .italico\r\n    {\r\n        font-style: italic;\r\n    }\r\n</style>\r\n","<svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n    width={w}\r\n    height={h}\r\n    {style}\r\n>\r\n    <use xlink:href=\"assets/svg/{file}.svg#icon\"/>\r\n</svg>\r\n\r\n\r\n<script lang=\"ts\">\r\n    \r\n    // Visíveis externamente\r\n    export let file: string;\r\n    export let w: number = 32;\r\n    export let h: number = 32;\r\n    export let style: string = '';\r\n\r\n</script>\r\n","import type AFD from '../classes/AFD';\r\nimport type { Writable } from 'svelte/store';\r\n\r\ninterface AFDPool\r\n{\r\n    [key: string]: Writable<AFD>;\r\n};\r\n\r\nconst afds: AFDPool =  {};\r\n\r\nexport default afds;\r\n","<div\r\n    bind:this={element}\r\n    class=\"state {selecionado?'selected':''} {ehFinal?'final':''}\"\r\n    style=\"\r\n        left: {x}px;\r\n        top: {y}px;\r\n    \"\r\n>\r\n    <!--\"Base\" para arrastar o componente>\r\n    <div class=\"drag\">\r\n        <hr>\r\n        <hr>\r\n        <hr>\r\n    </div-->\r\n    \r\n    <div class=\"content\">\r\n        <!--Mostra a bandeirinha do estado final-->\r\n        <h1 class=\"title\">\r\n            {ehInicial?'🎬':''} {ehFinal?'🏁':''} {estado.id}\r\n            <!--Remove o estado-->\r\n            {#if editavel}\r\n                <div class=\"delete\" on:click={apagaEstado}>\r\n                    <Icon file=\"trash\"></Icon>\r\n                </div>\r\n            {/if}\r\n        </h1>\r\n\r\n        {#if editavel}\r\n            <hr>\r\n\r\n            <!--Marca se um elemento é final ou não-->\r\n            <div class=\"row check\">\r\n                <div class=\"row check\">\r\n                    <input\r\n                        id=\"final-{estado.id}\"\r\n                        type=\"checkbox\"\r\n                        checked={ehFinal}\r\n                        on:input={trocaFinal}\r\n                    >\r\n                    <label for=\"final-{estado.id}\">Final</label>\r\n                </div>\r\n                <div class=\"row check\">\r\n                    <input\r\n                        id=\"inicial-{estado.id}\"\r\n                        type=\"radio\"\r\n                        checked={ehInicial}\r\n                        on:input={trocaInicial}\r\n                    >\r\n                    <label for=\"inicial-{estado.id}\">Inicial</label>\r\n                </div>\r\n            </div>\r\n        {/if}\r\n\r\n        <hr>\r\n    \r\n        <!--Mapeamento de pares (Símbolo → Estado)-->\r\n        <!--#TODO: Pelo amor de deus transforma isso em um componente-->\r\n        {#each [...estado.entradas] as entrada (entrada)}\r\n            \r\n            <div class=\"row\">\r\n                \r\n                <!--Entrada (chave)-->\r\n                <div>\r\n                    <label for=\"e-{estado.id}-{entrada}\">Símbolo</label>\r\n                    <select\r\n                        id=\"e-{estado.id}-{entrada}\"\r\n                        on:change={(e) => trocaEntrada(e, entrada)}\r\n                        disabled={editando || !editavel}\r\n                    >\r\n                        <!--Remove as opções que já estão mapeadas mas se mantém na lista (para se manter selecionada)-->\r\n                        {#each $afd.alfabeto.filter( s => !estado.contem( s ) || s === entrada ) as simbolo (simbolo)}\r\n                            <option\r\n                                value={simbolo}\r\n                                selected={ simbolo === entrada }\r\n                            >\r\n                                {simbolo}\r\n                            </option>\r\n                        {/each}\r\n                    </select>\r\n                </div>\r\n\r\n                <!--Seta fofa-->\r\n                <div class=\"arrow\">\r\n                    <Icon file=\"arrow-right\" w={24} h={24}></Icon>\r\n                </div>\r\n\r\n                <!--Saída (valor)-->\r\n                <div>\r\n                    <label for=\"o-{estado.id}-{entrada}\">Saída</label>\r\n                    <select\r\n                        id=\"o-{estado.id}-{entrada}\"\r\n                        on:change={(e) => trocaSaida(e, entrada)}\r\n                        disabled={editando || !editavel}\r\n                    >\r\n                        <!--Mostra todas as opções possíveis-->\r\n                        {#each $afd.estados.filter( s => s !== estado ) as estadoAFD (estadoAFD.id) }\r\n                            <option\r\n                                value=\"{estadoAFD.id}\"\r\n                                selected={estado.estado(entrada).id == estadoAFD.id}\r\n                            >\r\n                                {$afd.finais.includes( estadoAFD )?'🏁':''} {estadoAFD.id}\r\n                            </option>\r\n                        {/each}\r\n                    </select>\r\n                </div>\r\n\r\n                {#if editavel}\r\n                    <!--Remoção de mapeamento-->\r\n                    <div>\r\n                        <div class=\"delete\" on:click={() => apagaMapeamento( entrada )}>\r\n                            <Icon file=\"trash\"></Icon>\r\n                        </div>\r\n                    </div>\r\n                {/if}\r\n\r\n            </div>\r\n\r\n        {/each}\r\n\r\n    </div>\r\n        \r\n    <!--Adiciona um mapeamento novo-->\r\n    {#if editando}\r\n        <div class=\"column\">\r\n            <div class=\"row\">\r\n                <!--Entrada (chave)-->\r\n                <div>\r\n                    <label for=\"e-adc\">Símbolo</label>\r\n                    <select\r\n                        id=\"e-adc\"\r\n                        bind:value={simboloEscolhido}\r\n                    >\r\n                        <option value=''>\r\n                            ...\r\n                        </option>\r\n                        <!--Remove as opções que já estão mapeadas mas se mantém na lista (para se manter selecionada)-->\r\n                        {#each $afd.alfabeto.filter( s => !estado.contem( s ) ) as simbolo (simbolo)}\r\n                            <option\r\n                                value={simbolo}\r\n                            >\r\n                                {simbolo}\r\n                            </option>\r\n                        {/each}\r\n                    </select>\r\n                </div>\r\n\r\n                <!--Seta fofa-->\r\n                <div class=\"arrow\">\r\n                    <Icon file=\"arrow-right\" w={24} h={24}></Icon>\r\n                </div>\r\n\r\n                <!--Saída (valor)-->\r\n                <div>\r\n                    <label for=\"s-adc\">Saída</label>\r\n                    <select\r\n                        id=\"s-adc\"\r\n                        bind:value={estadoEscolhido}\r\n                    >\r\n                        <option value=''>...</option>\r\n                        <!--Mostra todas as opções possíveis-->\r\n                        {#each $afd.estados.filter( s => s !== estado ) as estadoAFD (estadoAFD.id) }\r\n                            <option\r\n                                value=\"{estadoAFD.id}\"\r\n                            >\r\n                                {$afd.finais.includes( estadoAFD )?'🏁':''} {estadoAFD.id}\r\n                            </option>\r\n                        {/each}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class={( $afd.estados.map( s => s.id ).includes( estadoEscolhido ) && $afd.alfabeto.includes( simboloEscolhido ) ) ? 'confirma' : 'desativado'} on:click={confirmaConexao}>\r\n                    <Icon file=\"checkmark\"></Icon>\r\n                </div>\r\n                <div class=\"delete\" on:click={cancelaConexao}>\r\n                    <Icon file=\"close\"></Icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    {:else if editavel}\r\n        <button class=\"add\" on:click={adicionaConexao}>\r\n            <Icon file=\"connect\"></Icon>\r\n            Adicionar conexão\r\n        </button>\r\n    {/if}\r\n</div>\r\n\r\n\r\n<script context=\"module\" lang=\"ts\">\r\n\r\n    // Stores\r\n    import afds from '../../stores/AFDStore'\r\n    import type { Writable } from 'svelte/store';\r\n    // Models\r\n    import type AFD from '../../classes/AFD'\r\n    import type Estado from '../../classes/Estado'\r\n    // Views\r\n    import Icon from '../Icon.svelte'\r\n\r\n</script>\r\n<script lang=\"ts\">\r\n\r\n    // Vistas externamente\r\n    // Visual\r\n    export let x: number = 16;\r\n    export let y: number = 16;\r\n    export let selecionado = false;\r\n    // Lógico\r\n    export let estado: Estado = null;\r\n    export let nomeAfd: string = 'playground';\r\n    export let editavel: boolean;\r\n    \r\n    // Internas\r\n    const afd: Writable<AFD> = afds[nomeAfd];\r\n\r\n    let simboloEscolhido: string;\r\n    let estadoEscolhido: string;\r\n\r\n    let editando: boolean = false;\r\n\r\n    // Uso só pra poder mudar o estilo do componente quando ele for um estado final\r\n    let ehInicial: boolean;\r\n    let ehFinal: boolean;\r\n    $: ehInicial = $afd.inicial === estado;\r\n    $: ehFinal = $afd.finais.includes( estado );\r\n\r\n    let element: HTMLDivElement;\r\n\r\n    $: {\r\n        if ( selecionado )\r\n            element.scrollIntoView();\r\n    }\r\n\r\n    function apagaMapeamento( entrada: string )\r\n    {\r\n        estado.atualiza( entrada, estado );\r\n        estado = estado;\r\n    }\r\n\r\n    function adicionaConexao()\r\n    {\r\n        editando = true;\r\n    }\r\n\r\n    function cancelaConexao()\r\n    {\r\n        editando = false;\r\n        simboloEscolhido = '';\r\n        estadoEscolhido = '';\r\n    }\r\n\r\n    function confirmaConexao()\r\n    {\r\n        const index = $afd.estados.map( s => s.id ).indexOf( estadoEscolhido );\r\n        const s = $afd.estados[index];\r\n        if ( s )\r\n        {\r\n            estado.atualiza( simboloEscolhido, s );\r\n            cancelaConexao();\r\n            estado = estado;\r\n        }\r\n    }\r\n\r\n    function apagaEstado()\r\n    {\r\n        $afd.removeEstado( estado );\r\n        estado = estado;\r\n        $afd = $afd;\r\n    }\r\n\r\n    // Dispara quando mudamos a entrada em um dos mapeamentos\r\n    function trocaEntrada( evento: Event, entrada: string )\r\n    {\r\n        const alvo = evento.target as any;\r\n\r\n        // Tenta trocar a entrada do estado atual\r\n        if ( estado.trocaEntrada( entrada, alvo.value ) )\r\n            // Força re-renderização do Svelte\r\n            estado = estado;\r\n    }\r\n\r\n    // Dispara quando mudamos a saída em um dos mapeamentos\r\n    function trocaSaida( evento: Event, entrada: string )\r\n    {\r\n        const alvo = evento.target as any;\r\n        \r\n        // Novo estado selecionado\r\n        const novoEstado = $afd.estados[ $afd.estados.map( e => e.id ).indexOf( alvo.value ) ];\r\n\r\n        if ( novoEstado )\r\n        {\r\n            // Atualiza o novo estado\r\n            estado.atualiza( entrada, novoEstado );\r\n            // Força re-renderização do Svelte\r\n            estado = estado;\r\n        }\r\n    }\r\n\r\n    function trocaInicial()\r\n    {\r\n        $afd.configuraInicial( estado );\r\n        $afd = $afd;\r\n    }\r\n\r\n    function trocaFinal( evento: Event )\r\n    {\r\n        const alvo = evento.target as any;\r\n\r\n        const agoraEhFinal: boolean = alvo.checked;\r\n\r\n        if ( agoraEhFinal )\r\n        {\r\n            $afd.adicionaFinal( estado );\r\n        }\r\n        else\r\n        {\r\n            $afd.removeFinal( estado );\r\n        }\r\n\r\n        // Força re-renderização do Svelte\r\n        $afd = $afd;\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    hr\r\n    {\r\n        border: 0;\r\n        margin: 8px 0px;\r\n        width: 100%;\r\n        height: 1px;\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    select\r\n    {\r\n        border-radius: 16px;\r\n    }\r\n    \r\n    /*\r\n    .drag\r\n    {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-top-left-radius: 16px;\r\n        border-top-right-radius: 16px;\r\n        min-height: 16px;\r\n        cursor: grab;\r\n        padding: 8px;\r\n        background-color: lightgrey;\r\n    }\r\n    */\r\n\r\n    .title\r\n    {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        margin: 0;\r\n    }\r\n\r\n    .delete\r\n    {\r\n        cursor: pointer;\r\n        transition: color 0.25s;\r\n    }\r\n\r\n    .delete:hover\r\n    {\r\n        color: red;\r\n    }\r\n\r\n    .confirma:hover\r\n    {\r\n        color: green;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .desativado\r\n    {\r\n        color: rgb(189, 189, 189);\r\n    }\r\n\r\n    .check\r\n    {\r\n        gap: 8px;\r\n    }\r\n\r\n    .check > input\r\n    {\r\n        margin: 0;\r\n    }\r\n\r\n    .content\r\n    {\r\n        display: flex;\r\n        flex-direction: column;\r\n        margin: 8px 16px;\r\n    }\r\n\r\n    /*\r\n    .drag > hr\r\n    {\r\n        margin: 2px;\r\n        width: 32px;\r\n    }\r\n    */\r\n\r\n    .add\r\n    {\r\n        border-bottom-left-radius: 16px;\r\n        border-bottom-right-radius: 16px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        justify-content: center;\r\n        margin-bottom: 0px;\r\n        width: 100%;\r\n        gap: 8px;\r\n    }\r\n\r\n    .state\r\n    {\r\n        user-select: none;\r\n        display: inline-block;\r\n        position: absolute;\r\n        border: 1px solid rgba(0, 0, 0, 0.2);\r\n        border-radius: 16px;\r\n        min-width: 160px;\r\n        min-height: 120px;\r\n        background-color: rgb(230, 230, 230);\r\n        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\r\n        transition: background-color 0.25s, color 0.25s;\r\n    }\r\n\r\n    .selected\r\n    {\r\n        cursor: grab;\r\n        outline: 4px solid rgba(0, 255, 32);\r\n    }\r\n\r\n    .final\r\n    {\r\n        background-color: steelblue;\r\n        color: white;\r\n    }\r\n\r\n    .row\r\n    {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n\r\n    .arrow\r\n    {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        min-width: 48px;\r\n    }\r\n\r\n    .column\r\n    {\r\n        border-top: 1px solid rgba(0, 0, 0, 0.1);\r\n        border-bottom-left-radius: 16px;\r\n        border-bottom-right-radius: 16px;\r\n        padding: 16px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        background-color: lightgray;\r\n        color: black;\r\n    }\r\n</style>","<!--Estrutura visual/dinâmica do componente-->\r\n<div class=\"application\">\r\n    <div class=\"ui\">\r\n        <div class=\"top right\">\r\n            {#if editavel && controlesVisiveis}\r\n                <button class=\"adiciona\" on:click={criaEstado}>\r\n                    <Icon file=\"add\"></Icon>\r\n                </button>\r\n            {/if}\r\n            <button class={controlesVisiveis ? 'visivel' : 'invisivel'} on:click={()=>controlesVisiveis=!controlesVisiveis}>\r\n                <Icon file={controlesVisiveis ? 'eye' : 'eye-off'}></Icon>\r\n            </button>\r\n        </div>\r\n\r\n        {#if controlesVisiveis}\r\n            \r\n            <div class=\"column lower left\">\r\n                <div class=\"row fill\">\r\n                    <span>Alfabeto</span>\r\n                    {#if editavel}    \r\n                        <div class=\"alfabeto\">\r\n                            <input type=\"text\" value={$afd.alfabeto.join('')} on:input={filtraAlfabeto}>\r\n                        </div>\r\n                    {:else}\r\n                        <div class=\"passo-a-passo\">\r\n                            {#each $afd.alfabeto as letra}\r\n                                <span class=\"letra\">{letra}</span>\r\n                            {/each}\r\n                        </div>\r\n                    {/if}\r\n                </div>\r\n                <div class=\"row\">\r\n                    <button class=\"reset\" on:click={reset}>\r\n                        <Icon file='stop' w={24} h={24}></Icon>\r\n                    </button>\r\n                    <button class={executando ? 'pausa' : 'executa' } on:click={alteraExecucao}>\r\n                        <Icon file={executando ? 'pause' : 'play'} w={24} h={24}></Icon>\r\n                    </button>\r\n                    <div class=\"fill row\">\r\n                        <div>{ dilatacaoTemporal%1 ? dilatacaoTemporal : dilatacaoTemporal+'.0' }x</div>\r\n                        <Icon file=\"forward\"></Icon>\r\n                        <input\r\n                            on:change={atualizaVelocidade}\r\n                            bind:value={dilatacaoTemporal}\r\n                            step={0.1}\r\n                            min={minDilatacaoTemporal}\r\n                            max={maxDilatacaoTemporal}\r\n                            type=\"range\"\r\n                        >\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"alfabeto row lower right\">\r\n                {#if executando || posSimbolo > 0}\r\n                    <div class=\"passo-a-passo\">\r\n                        {#each palavra as letra, pos }\r\n                            <span class=\"letra {posSimbolo===pos?'selecionado':''}\">{letra}</span>\r\n                        {/each}\r\n                    </div>\r\n                {:else}\r\n                    <input type=\"text\" placeholder=\"Digite uma palavra...\" value={palavra} on:input={filtraPalavra}>\r\n                {/if}\r\n                \r\n            </div>\r\n        {/if}\r\n    </div>\r\n    <section id=\"playground\" class=\"playground\">\r\n        {#each componentes as estado (estado.estado.id) }\r\n            <EstadoComponent {...estado} {editavel}></EstadoComponent>\r\n        {/each}\r\n    </section>\r\n</div>\r\n\r\n\r\n<script context=\"module\" lang=\"ts\">\r\n\r\n    // Stores\r\n    import afds from '../../stores/AFDStore';\r\n    // Models\r\n    import Estado from \"../../classes/Estado\";\r\n    // Views\r\n    import EstadoComponent from \"./Estado.svelte\";\r\n    import Icon from \"../Icon.svelte\";\r\n\r\n    // Informações mínimas necessárias para a view de componente\r\n    export interface DadosComponenteEstado\r\n    {\r\n        [key: string]: any;\r\n        nomeAfd: string;\r\n        estado: Estado;\r\n    }\r\n\r\n</script>\r\n<script lang=\"ts\">\r\n\r\n    // Visíveis externamente\r\n    export let nomeAfd: string;\r\n    export let editavel: boolean;\r\n\r\n    // Internas\r\n    let executando: boolean = false;\r\n    let palavra: string = '';\r\n    let posSimbolo: number = 0;\r\n    \r\n    let dilatacaoTemporal: number = 1;\r\n    const minDilatacaoTemporal: number = 0.1;\r\n    const maxDilatacaoTemporal: number = 9.9;\r\n    let timeout: number;\r\n    let msIntervalo: number;\r\n    let controlesVisiveis: boolean = true;\r\n\r\n    $: msIntervalo = 1000 * ( 1 / dilatacaoTemporal );\r\n\r\n    const afd = afds[nomeAfd];\r\n    let componentes: DadosComponenteEstado[];\r\n    let estadoAtual: Estado = null;\r\n    $: componentes = $afd.estados.map( ( estado, i ) => ({ nomeAfd, estado, x: 16 + 300*i, y: 16, selecionado: estado === estadoAtual }) );\r\n\r\n    let proxId: number = 0;\r\n\r\n    function filtraPalavra( evento: Event )\r\n    {\r\n        const alvo = evento.target as any;\r\n        alvo.value = [...alvo.value].filter( l => $afd.alfabeto.includes( l ) ).join('');\r\n        palavra = alvo.value;\r\n    }\r\n\r\n    function filtraAlfabeto( evento: Event )\r\n    {\r\n        const alvo = evento.target as any;\r\n        const alfa = [...new Set(alvo.value)] as string[];\r\n        alvo.value = alfa.join('');\r\n        palavra = [...palavra].filter( l => alfa.includes( l ) ).join('');\r\n        $afd.alfabeto = alfa;\r\n    }\r\n\r\n    function criaEstado()\r\n    {\r\n        const novoEstado = new Estado( 'S'+proxId++ );\r\n        $afd.adicionaEstado( novoEstado );\r\n        componentes.push({ nomeAfd, estado: novoEstado, x: 16, y: 16 });\r\n\r\n        $afd = $afd;\r\n    }\r\n\r\n    function alteraExecucao()\r\n    {\r\n        executando = !executando\r\n\r\n        if ( executando )\r\n            if ( palavra.length )\r\n            {\r\n                if ( posSimbolo === 0 )\r\n                    estadoAtual = $afd.inicial;\r\n                intervalo();\r\n            }\r\n            else\r\n                executando = false;\r\n    }\r\n\r\n    function atualizaVelocidade( event: Event )\r\n    {\r\n        clearTimeout( timeout );\r\n        intervalo();\r\n    }\r\n\r\n    function proximoSimbolo()\r\n    {\r\n        if ( executando )\r\n        {\r\n            if ( posSimbolo < palavra.length && estadoAtual )\r\n            {\r\n                estadoAtual = estadoAtual.transicao( palavra[posSimbolo] );\r\n                intervalo();\r\n                posSimbolo++;\r\n            }\r\n        }\r\n        else\r\n            clearTimeout( timeout );\r\n    }\r\n\r\n    function intervalo()\r\n    {\r\n        clearTimeout( timeout );\r\n        timeout = setTimeout( proximoSimbolo, msIntervalo ) as any;\r\n    }\r\n\r\n    function reset()\r\n    {\r\n        clearTimeout( timeout );\r\n        posSimbolo = 0;\r\n        estadoAtual = null;\r\n        executando = false;\r\n    }\r\n</script>\r\n\r\n\r\n<style>\r\n    .application\r\n    {\r\n        width: 100%;\r\n        min-height: 720px;\r\n        \r\n        border-radius: 16px;\r\n        overflow: hidden;\r\n        border: 1px solid rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .playground\r\n    {\r\n        position: relative;\r\n\r\n        margin-top: -720px;\r\n\r\n        border: 1px solid rgba(0, 0, 0, 0.2);\r\n        border-radius: 16px;\r\n\r\n        overflow: auto;\r\n\r\n        \r\n        width: 100%;\r\n        min-height: 720px;\r\n\r\n        background-image: url(../assets/imagens/grid.png);\r\n        background-attachment: local;\r\n        background-repeat: repeat;\r\n    }\r\n\r\n    .ui\r\n    {\r\n        position: relative;\r\n        width: 100%;\r\n        min-height: 720px;\r\n    }\r\n\r\n    .ui > *\r\n    {\r\n        position: absolute;\r\n\r\n        z-index: 999999; /* Fica na frente de praticamente todos os estados */\r\n    }\r\n\r\n    .ui button\r\n    {\r\n        box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);\r\n\r\n        border-radius: 50%;\r\n        padding-bottom: 4px;\r\n    \r\n        width: 64px;\r\n        height: 64px;\r\n\r\n        font-size: 32px;\r\n\r\n        transition: all 0.2s;\r\n    }\r\n\r\n    .row\r\n    {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        gap: 8px;\r\n    }\r\n\r\n    .column\r\n    {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        gap: 8px;\r\n    }\r\n\r\n    .lower\r\n    {\r\n        bottom: 16px;\r\n    }\r\n\r\n    .left\r\n    {\r\n        left: 16px;\r\n    }\r\n\r\n    .top\r\n    {\r\n        top: 16px;\r\n    }\r\n\r\n    .right\r\n    {\r\n        right: 16px;\r\n    }\r\n\r\n    .adiciona\r\n    {\r\n        background-color: rgb(0, 100, 185);\r\n        padding: 12px;\r\n        color: white;\r\n    }\r\n\r\n    .adiciona:hover\r\n    {\r\n        background-color: rgb(0, 82, 153);\r\n    }\r\n\r\n    .adiciona:active\r\n    {\r\n        background-color: rgb(0, 63, 117);;\r\n    }\r\n\r\n    .visivel\r\n    {\r\n        background-color: white;\r\n        padding: 12px;\r\n        fill: steelblue;\r\n        color: steelblue;\r\n    }\r\n\r\n    .visivel:hover\r\n    {\r\n        background-color: lightgray;\r\n    }\r\n\r\n    .visivel:active\r\n    {\r\n        background-color: rgb(199, 199, 199);\r\n    }\r\n    \r\n    .invisivel\r\n    {\r\n        background-color: rgb(167, 167, 167);\r\n        padding: 12px;\r\n        fill: white;\r\n        color: white;\r\n    }\r\n\r\n    .invisivel:hover\r\n    {\r\n        background-color: rgb(134, 134, 134);\r\n    }\r\n\r\n    .invisivel:active\r\n    {\r\n        background-color: rgb(105, 105, 105);;\r\n    }\r\n\r\n    .executa\r\n    {\r\n        padding: 0;\r\n        margin: 0;\r\n        width: 48px !important;\r\n        height: 48px !important;\r\n        color: white;\r\n        background-color: rgb(185, 100, 0);\r\n    }\r\n    \r\n    .executa:hover\r\n    {\r\n        background-color: rgb(155, 82, 0);\r\n    }\r\n    \r\n    .executa:active\r\n    {\r\n        background-color: rgb(114, 70, 20);\r\n    }\r\n    \r\n    .pausa\r\n    {\r\n        padding: 0;\r\n        margin: 0;\r\n        width: 48px !important;\r\n        height: 48px !important;\r\n        background-color: rgb(0, 185, 100);\r\n        color: white;\r\n    }\r\n    \r\n    .pausa:hover\r\n    {\r\n        background-color: rgb(0, 155, 82);\r\n    }\r\n\r\n    .pausa:active\r\n    {\r\n        background-color: rgb(20, 114, 70);\r\n    }\r\n\r\n    .reset\r\n    {\r\n        padding: 0;\r\n        margin: 0;\r\n        width: 48px !important;\r\n        height: 48px !important;\r\n        background-color: rgb(0, 0, 0);\r\n        color: white;\r\n    }\r\n    \r\n    .reset:hover\r\n    {\r\n        background-color: rgb(36, 36, 36);\r\n    }\r\n\r\n    .reset:active\r\n    {\r\n        background-color: rgb(71, 71, 71);\r\n    }\r\n\r\n    .fill\r\n    {\r\n        border-radius: 16px;\r\n        padding: 4px 16px;\r\n        background-color: lightgray;\r\n    }\r\n\r\n    .fill > input\r\n    {\r\n        margin: 0;\r\n    }\r\n    \r\n    .letra\r\n    {\r\n        letter-spacing: 3px;\r\n    }\r\n\r\n    .alfabeto > input\r\n    {\r\n        letter-spacing: 3px;\r\n        outline: 1px solid steelblue;\r\n        box-sizing: border-box;\r\n        width: 256px;\r\n        height: 48px;\r\n        padding: 8px;\r\n        margin: 0;\r\n        border: 1px solid #ccc;\r\n        border-radius: 2px;\r\n    }\r\n\r\n    .alfabeto > input:focus\r\n    {\r\n        outline: 3px solid steelblue;\r\n    }\r\n\r\n    .passo-a-passo\r\n    {\r\n        outline: 1px solid steelblue;\r\n        box-sizing: border-box;\r\n        overflow: auto;\r\n        width: 256px;\r\n        height: 48px;\r\n        padding: 8px;\r\n        margin: 0;\r\n        border: 1px solid #ccc;\r\n        border-radius: 2px;\r\n        background-color: rgb(230,230,230);\r\n    }\r\n\r\n    .selecionado\r\n    {\r\n        color: white;\r\n        background-color: red;\r\n    }\r\n</style>","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","<main>\n\t<Titulo></Titulo>\n\t<h2>Validador de CEP</h2>\n\t<Automato nomeAfd=\"cep\" editavel={false}></Automato>\n\t<h2>Validador de Email</h2>\n\t<Automato nomeAfd=\"email\" editavel={false}></Automato>\n\t<h2 class=\"playground\">Playground!</h2>\n\t<Automato nomeAfd=\"playground\" editavel={true}></Automato>\n</main>\n\n<script lang=\"ts\">\n\t// Configura os AFDs\n\tafds['email'] = writable( email );\n\tafds['cep'] = writable( cep );\n\tafds['playground'] = writable( vazio );\n</script>\n\n<script context=\"module\" lang=\"ts\">\n\t\n\t// Stores\n\timport afds from './stores/AFDStore';\n\timport { writable } from 'svelte/store';\n\t// Views\n\timport Automato from './componentes/Playground/Automato.svelte';\n\timport Titulo from './componentes/Titulo.svelte';\n\t// Outros\n\timport { cep, email, vazio } from './auxiliares/InstanciasAFDs';\n\n</script>\n\n<style>\n\tmain\n\t{\n\t\tbox-sizing: border-box;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 90%;\n\t\tmargin: 0px 5%;\n\t\tpadding: 32px;\n\t\tbackground-color: whitesmoke;\n\t}\n\n\t.playground\n\t{\n\t\tfont-style: italic;\n\t}\n</style>","import App from './App.svelte';\n\nexport default new App({ target: document.body });\n"],"names":["Estado"],"mappings":"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"}